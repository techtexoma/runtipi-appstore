services:
  memgpt:
    image: lscr.io/linuxserver/memgpt:24.05.20240520
    container_name: memgpt
    environment:
      - APP_URL=${APP_PROTOCOL:-http}://${APP_DOMAIN}
      - DB_HOST=memgpt-db
      - DB_USERNAME=tipi
      - DB_PASSWORD=${memgpt_DB_PASS}
      - DB_DATABASE=memgptapp
    volumes:
      - ${APP_DATA_DIR}/data/config:/config
    dns:
      - ${DNS_IP}
    ports:
      - ${APP_PORT}:80
    restart: unless-stopped
    depends_on:
      - memgpt-db
    networks:
      - tipi_main_network
    labels:
      # Main
      traefik.enable: true
      traefik.http.middlewares.memgpt-web-redirect.redirectscheme.scheme: https
      traefik.http.services.memgpt.loadbalancer.server.port: 80
      # Web
      traefik.http.routers.memgpt-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.memgpt-insecure.entrypoints: web
      traefik.http.routers.memgpt-insecure.service: memgpt
      traefik.http.routers.memgpt-insecure.middlewares: memgpt-web-redirect
      # Websecure
      traefik.http.routers.memgpt.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.memgpt.entrypoints: websecure
      traefik.http.routers.memgpt.service: memgpt
      traefik.http.routers.memgpt.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.memgpt-local-insecure.rule: Host(`memgpt.${LOCAL_DOMAIN}`)
      traefik.http.routers.memgpt-local-insecure.entrypoints: web
      traefik.http.routers.memgpt-local-insecure.service: memgpt
      traefik.http.routers.memgpt-local-insecure.middlewares: memgpt-web-redirect
      # Local domain secure
      traefik.http.routers.memgpt-local.rule: Host(`memgpt.${LOCAL_DOMAIN}`)
      traefik.http.routers.memgpt-local.entrypoints: websecure
      traefik.http.routers.memgpt-local.service: memgpt
      traefik.http.routers.memgpt-local.tls: true

  memgpt_server:
    #image: memgpt/memgpt-server:latest
    image: memgpt-server
    hostname: memgpt-server
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    depends_on:
      - memgpt_db
    ports:
      - "8083:8083"
      - "8283:8283"
    environment:
      - MEMGPT_SERVER_PASS=${MEMGPT_SERVER_PASS} # memgpt server password
      - MEMGPT_PG_DB=${MEMGPT_PG_DB}
      - MEMGPT_PG_USER=${MEMGPT_PG_USER}
      - MEMGPT_PG_PASSWORD=${MEMGPT_PG_PASSWORD}
      - MEMGPT_PG_HOST=pgvector_db
      - MEMGPT_PG_PORT=5432
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SERPAPI_API_KEY=${SERPAPI_API_KEY}
    volumes:
      - ${APP_DATA_DIR}/data/config/server_config.yaml:/root/.memgpt/config # config file
      # ~/.memgpt/credentials:/root/.memgpt/credentials # credentials file

  memgpt-db:
    image: lscr.io/linuxserver/mariadb
    container_name: memgpt-db
    environment:
      - TZ=${TZ}
      - MYSQL_DATABASE=memgptapp
      - MYSQL_USER=tipi
      - MYSQL_PASSWORD=${memgpt_DB_PASS}
    volumes:
      - ${APP_DATA_DIR}/data/db:/config
    restart: unless-stopped
    networks:
      - tipi_main_network

  memgpt_db:
    image: ankane/pgvector:v0.5.1
    networks:
      default:
        aliases:
          - pgvector_db
          - memgpt-db
    environment:
      - POSTGRES_USER=${MEMGPT_PG_USER}
      - POSTGRES_PASSWORD=${MEMGPT_PG_PASSWORD}
      - POSTGRES_DB=${MEMGPT_PG_DB}
    volumes:
      - ./.persist/pgdata-test:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
